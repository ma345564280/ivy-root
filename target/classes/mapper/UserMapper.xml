<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ivy.root.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ivy.root.domain.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_status" property="accountStatus" jdbcType="TINYINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_status, user_name, password, mobile, gender, pic_url, type, role, address, 
    del_flag, create_time, update_time, open_id, email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ivy.root.domain.User" >
    insert into t_user (id, account_status, user_name, 
      password, mobile, gender, 
      pic_url, type, role, 
      address, del_flag, create_time, 
      update_time, open_id, email
      )
    values (#{id,jdbcType=BIGINT}, #{accountStatus,jdbcType=TINYINT}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{picUrl,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{delFlag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{openId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ivy.root.domain.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountStatus != null" >
        account_status,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountStatus != null" >
        #{accountStatus,jdbcType=TINYINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ivy.root.domain.User" >
    update t_user
    <set >
      <if test="accountStatus != null" >
        account_status = #{accountStatus,jdbcType=TINYINT},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ivy.root.domain.User" >
    update t_user
    set account_status = #{accountStatus,jdbcType=TINYINT},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getOneUserByCondition" parameterType="com.ivy.root.domain.User" resultMap="BaseResultMap">
    select *
    from t_user
    where 1 = 1
    <if test="userName != null">
      and user_name =#{userName}
    </if>
    <if test="password != null">
      and password =#{password}
    </if>
    <if test="mobile != null">
      and mobile =#{mobile}
    </if>
  </select>

  <resultMap id="UserRoleMap" type="com.ivy.root.vo.UserRoleVo">
    <result column="id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
  </resultMap>

  <select id="queryUserRoleByCondition" parameterType="map" resultType="com.ivy.root.dto.UserRoleDto">

    select c.id as userId, c.user_name as userName, c.role_id as roleId, d.role_name roleName
    from  (
      select a.id, a.user_name, b.role_id
      from t_user a
      left join t_r_user_role b
      on a.id = b.user_id
      where a.del_flag = 0 and b.del_flag = 0 and a.id = #{userId}
    ) c
    left join t_role d
    on c.role_id = d.id
    where d.del_flag = 0
  </select>


  <resultMap id="AuthorityResultMap" type="com.ivy.root.domain.UserAuthority" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="authority_name" property="authorityName" jdbcType="VARCHAR" />
    <result column="authority_tag" property="authorityTag" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>

  <select id="queryAuthoritiesByCondition" parameterType="map" resultMap="AuthorityResultMap">
    select *
    from t_authority
    where del_flag = 0 and  id in  (
    select authority_id
    from t_r_role_authority
    where del_flag = 0 and role_id in
    <foreach collection="roleIds" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
    );
  </select>

</mapper>